https://neetcode.io/problems/find-minimum-in-rotated-sorted-array?list=blind75

class Solution {
   
    public int findMin(int[] nums) {

        int left = 0;
        int right = nums.length-1;
        //avoid using l+r/2 because to avoid overflow
        //int mid = left + (right - left)/2;

        //not left<= because if l == r then search is done and no further iterations are required
        while(left<right) {
            int mid = left + (right - left)/2;
            if(nums[mid]>nums[right]) {
                // Minimum is in the right half
                //If nums[mid] > nums[right],
                // the minimum must be after mid, because nums[right] is smaller than nums[mid].
                left = mid+1;
            } else {
                // Minimum is in the left half or at mid
                right = mid;
            }
        }
        return nums[left];
    }
}
