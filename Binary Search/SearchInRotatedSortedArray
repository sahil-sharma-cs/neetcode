class Solution {

    //the main logic is to find all combinations whether your target exists in left window or right window. 
    // remeber id mid element greater than right -> left window is sorted
    public int search(int[] nums, int target) {

        int left = 0;
        int right = nums.length - 1;
        while (left <= right) {

            int mid = left + (right - left)/2;

            if(nums[mid] == target) {
                return mid;
            }
            if(nums[right] > nums[mid]) {
                //right is sorted
                if(target > nums[mid] && target <= nums[right]) {
                    left = mid + 1;
                } else {
                    right = mid - 1;
                }
            } else {
                if(target < nums[mid] && target >= nums[left]) {
                    right = mid - 1;
                } else {
                    left = mid +  1;
                }
            }
        }
        return -1;
    }
}
